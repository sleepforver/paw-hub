package ${packageName}.domain;

    ## 根据列类型获取导入包
    #foreach ($import in $importList)
    import ${import};
    #end
    ## 导入项目自定义的Excel注解，用于生成Excel文档
import com.pet.common.annotation.Excel;
    #if($table.crud || $table.sub)
        ## 如果表具有CRUD操作或子表，继承BaseEntity
    import com.pet.common.core.domain.BaseEntity;
    #elseif($table.tree)
        ## 如果表是树形结构，继承TreeEntity
    import com.pet.common.core.domain.TreeEntity;
    #end
    ## 导入lombok相关注解
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
    #set($Entity="BaseEntity")
#elseif($table.tree)
    #set($Entity="TreeEntity")
#end
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ${ClassName} extends ${Entity}
        {   ## 定义类的序列化版本ID
private static final long serialVersionUID = 1L;
    ## 根据表的列定义实体类的属性
    #foreach ($column in $columns)
        ## 如果不是父类的属性，则生成属性
        #if(!$table.isSuperColumn($column.javaField))
        /** $column.columnComment */
            ## 如果字段需要在列表中展示，使用Excel注解标记
            #if($column.list)
                #set($parentheseIndex=$column.columnComment.indexOf("（"))
                #if($parentheseIndex != -1)
                    #set($comment=$column.columnComment.substring(0, $parentheseIndex))
                #else
                    #set($comment=$column.columnComment)
                #end
                #if($parentheseIndex != -1)
                @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
                #elseif($column.javaType == 'Date')
                @JsonFormat(pattern = "yyyy-MM-dd")
                @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd")
                #else
                @Excel(name = "${comment}")
                #end
            #end
        private $column.javaType $column.javaField;

        #end
    #end
    ## 如果表有子表，定义子表信息的集合
    #if($table.sub)
    /** $table.subTable.functionName信息 */
    private List<${subClassName}> ${subclassName}List;

    #end



}
